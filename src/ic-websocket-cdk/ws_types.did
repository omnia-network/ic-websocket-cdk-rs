type ClientPrincipal = principal;

type WebsocketMessage = record {
  client_principal : ClientPrincipal;
  sequence_num : nat64;
  timestamp : nat64;
  is_service_message : bool;
  content : blob;
};

type CanisterOutputMessage = record {
  client_principal : ClientPrincipal;
  key : text;
  content : blob;
};

type CanisterOutputCertifiedMessages = record {
  messages : vec CanisterOutputMessage;
  cert : blob;
  tree : blob;
};

type CanisterWsOpenArguments = null;

type CanisterWsOpenResult = variant {
  Ok : null;
  Err : text;
};

type CanisterWsCloseArguments = record {
  client_principal : ClientPrincipal;
};

type CanisterWsCloseResult = variant {
  Ok : null;
  Err : text;
};

type CanisterWsMessageArguments = record {
  msg : WebsocketMessage;
};

type CanisterWsMessageResult = variant {
  Ok : null;
  Err : text;
};

type CanisterWsGetMessagesArguments = record {
  nonce : nat64;
};

type CanisterWsGetMessagesResult = variant {
  Ok : CanisterOutputCertifiedMessages;
  Err : text;
};
